version: '3.8'

services:
  api:  # Renamed from 'web' for clarity
    build: .
    command: >
      sh -c "python manage.py migrate &&
           gunicorn banas.wsgi:application --bind 0.0.0.0:8000 --workers 2 
           --access-logfile - 
           --error-logfile - 
           --capture-output 
           --log-level debug 
           --enable-stdio-inheritance"
    environment:
      - PYTHONUNBUFFERED=1  # Critical for real-time logs
      - DJANGO_SETTINGS_MODULE=banas.settings
      - DEBUG=1  # Keep this only for staging, remove in production
      - DATABASE_URL=postgresql://postgres:Kimws@7698@db:5432/banas
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    ports:
      - "8000:8000"
    volumes:
      - static_volume:/app/static
    deploy:
      resources:
        limits:
          memory: 256M  # DRF with Gunicorn needs ~100MB/worker
          cpus: "0.5"
    restart: unless-stopped
    depends_on:
      - db
      - redis

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=banas
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Kimws@7698  # Must match DATABASE_URL
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  celery_worker:
    build: .
    command: celery -A banas worker -l info
    volumes:
      - .:/app
    environment:
      - DATABASE_URL=postgresql://postgres:Kimws@7698@db:5432/banas
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis

  celery_beat:
    build: .
    command: celery -A banas beat -l info
    volumes:
      - .:/app
    environment:
      - DATABASE_URL=postgresql://postgres:Kimws@7698@db:5432/banas
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis

volumes:
  postgres_data:  # Now properly defined
  redis_data:     # Now properly defined
  static_volume: